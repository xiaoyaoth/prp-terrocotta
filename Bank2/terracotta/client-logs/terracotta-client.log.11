2010-06-28 22:11:32,456 [main] INFO com.terracottatech.general - New logging session started.
2010-06-28 22:11:32,496 [main] INFO com.terracottatech.console - Terracotta 3.2.1, as of 20100514-160527 (Revision 15117 by cruise@su10mo5 from 3.2.1_2)
2010-06-28 22:11:32,557 [main] INFO com.tc.config.schema.setup.StandardXMLFileConfigurationCreator - Attempting to load configuration from the file at 'F:\我的文件夹\Workspace\Bank\tc-config.xml'...
2010-06-28 22:11:32,561 [main] INFO com.tc.config.schema.setup.StandardXMLFileConfigurationCreator - Successfully loaded configuration from the file at 'F:\我的文件夹\Workspace\Bank\tc-config.xml'. Config is:

<?xml version="1.0" encoding="UTF-8"?>
<con:tc-config xmlns:con="http://www.terracotta.org/config">
  <servers>
    <server host="%i" name="localhost">
      <dso-port>9510</dso-port>
      <jmx-port>9520</jmx-port>
      <data>terracotta/server-data</data>
      <logs>terracotta/server-logs</logs>
      <statistics>terracotta/cluster-statistics</statistics>
    </server>
  </servers>
  <clients>
    <logs>terracotta/client-logs</logs>
    <statistics>terracotta/client-statistics/%D</statistics>
  </clients>
  <application>
    <dso>
      <instrumented-classes>
        <include>
          <class-expression>simulation.modeling.ClockTick</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.DefaultBelief</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.PlanManager</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.InvokeMethod</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.MainInterface+</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.MessageInfo</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.Path</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.PlanCondition</class-expression>
        </include>
        <include>
          <class-expression>simulation.modeling.PlanInstance</class-expression>
        </include>
        <include>
          <class-expression>simulation.runtime.Server</class-expression>
        </include>
        <include>
          <class-expression>java.lang.Thread</class-expression>
        </include>
        <include>
          <class-expression>simulation.runtime.Parse</class-expression>
        </include>
        <include>
          <class-expression>simulation.runtime.Tuple</class-expression>
        </include>
        <include>
          <class-expression>Bank</class-expression>
        </include>
        <include>
          <class-expression>Customer</class-expression>
        </include>
        <include>
          <class-expression>simulation.runtime.Client$Func</class-expression>
        </include>
      </instrumented-classes>
      <roots>
        <root>
          <field-name>simulation.runtime.Server.cases</field-name>
        </root>
        <root>
          <field-name>simulation.runtime.Server.JVM_counter</field-name>
        </root>
      </roots>
      <locks>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.runtime.Client.main(java.lang.String[])</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.runtime.Client.__INIT__()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.runtime.Server.__INIT__()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.runtime.Server.main(java.lang.String[])</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.runtime.Server.run()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.ClockTick.incLeft(int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.ClockTick.run()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.ClockTick.decNow()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.addTick()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.setTick(int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.addMess(boolean, simulation.modeling.MessageInfo)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.removeMess(boolean, int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.addConn(int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.removeConn(int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>java.lang.String simulation.modeling.DefaultBelief.toString()</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.setLifeCycle(int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.setID(int)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.setMain(simulation.modeling.MainInterface)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock auto-synchronized="false">
          <method-expression>void simulation.modeling.DefaultBelief.run()</method-expression>
        </autolock>
      </locks>
    </dso>
  </application>
</con:tc-config>
2010-06-28 22:11:32,955 [main] INFO com.terracottatech.console - Configuration loaded from the file at 'F:\我的文件夹\Workspace\Bank\tc-config.xml'.
2010-06-28 22:11:32,990 [main] INFO com.tc.properties.TCProperties - Loading default properties from tc.properties
2010-06-28 22:11:32,990 [main] INFO com.tc.properties.TCProperties - The property "tc.config.getFromSource.timeout" was read before initialization completed. "tc.config.getFromSource.timeout" = 30000
2010-06-28 22:11:32,990 [main] INFO com.tc.properties.TCProperties - tc-config doesn't have any tc-property. No tc-property will be overridden
2010-06-28 22:11:32,994 [main] INFO com.tc.properties.TCProperties - Loaded TCProperties : TCProperties = { cvt.buffer.randomsuffix.enabled = false, cvt.client.fail.buffer.open = false, cvt.rest.interface.enabled = true, cvt.retriever.notification.interval = 60, cvt.statistics.logging.interval = 900, cvt.store.randomsuffix.enabled = false, ehcache.clusterAllCacheManagers = true, ehcache.concurrency = 128, ehcache.evictor.logging.enabled = false, ehcache.evictor.pool.size = 1, ehcache.global.eviction.enable = true, ehcache.global.eviction.frequency = 10, ehcache.global.eviction.rest.timeMillis = 10, ehcache.global.eviction.segments = 2, ehcache.lock.readLevel = READ, ehcache.lock.writeLevel = WRITE, ehcache.logging.enabled = false, http.defaultservlet.attribute.aliases = false;, http.defaultservlet.attribute.dirallowed = false;, http.defaultservlet.enabled = false;, instrumentation.finalField.fastRead = true, l1.cachemanager.criticalObjectThreshold = -1, l1.cachemanager.criticalThreshold = 90, l1.cachemanager.enabled = true, l1.cachemanager.leastCount = 2, l1.cachemanager.logging.enabled = false, l1.cachemanager.monitorOldGenOnly = true, l1.cachemanager.percentageToEvict = 10, l1.cachemanager.sleepInterval = 3000, l1.cachemanager.threshold = 70, l1.connect.versionMatchCheck.enabled = true, l1.healthcheck.l2.bindAddress = 0.0.0.0, l1.healthcheck.l2.bindPort = 0, l1.healthcheck.l2.ping.enabled = true, l1.healthcheck.l2.ping.idletime = 5000, l1.healthcheck.l2.ping.interval = 1000, l1.healthcheck.l2.ping.probes = 3, l1.healthcheck.l2.socketConnect = true, l1.healthcheck.l2.socketConnectCount = 13, l1.healthcheck.l2.socketConnectTimeout = 5, l1.jvm.check.compatibility = true, l1.l2.config.validation.enabled = true, l1.lock.statistics.gatherInterval = 1, l1.lock.statistics.traceDepth = 0, l1.lockmanager.striped.count = 128, l1.lockmanager.timeout.interval = 60000, l1.max.connect.retries = -1, l1.modules.additional = , l1.modules.default = org.terracotta.modules.excludes-config;bundle-version:=3.2.1,org.terracotta.modules.guimodels-config;bundle-version:=3.2.1,org.terracotta.modules.jdk15-preinst-config;bundle-version:=3.2.1,org.terracotta.modules.standard-config;bundle-version:=3.2.1, l1.modules.repositories = , l1.modules.tc-version-check = , l1.objectmanager.fault.logging.enabled = false, l1.objectmanager.flush.logging.enabled = false, l1.objectmanager.objectid.request.size = 50000, l1.objectmanager.remote.batchLookupTimePeriod = 1, l1.objectmanager.remote.logging.enabled = false, l1.objectmanager.remote.maxDNALRUSize = 60, l1.objectmanager.remote.maxRequestSentImmediately = 4, l1.seda.stage.sink.capacity = -1, l1.serverarray.objectCreationStrategy = round-robin, l1.serverarray.objectCreationStrategy.groupAffinity.groupName = mirror-group1, l1.serverarray.objectCreationStrategy.roundRobin.startIndex = sequential, l1.socket.connect.timeout = 10000, l1.socket.reconnect.waitInterval = 1000, l1.transactionmanager.completedAckFlushTimeout = 5000, l1.transactionmanager.folding.debug = false, l1.transactionmanager.folding.enabled = true, l1.transactionmanager.folding.lock.limit = 0, l1.transactionmanager.folding.object.limit = 0, l1.transactionmanager.logging.enabled = false, l1.transactionmanager.maxBatchSizeInKiloBytes = 128, l1.transactionmanager.maxOutstandingBatchSize = 4, l1.transactionmanager.maxPendingBatches = 88, l1.transactionmanager.maxSleepTimeBeforeHalt = 1024, l1.transactionmanager.strings.compress.enabled = true, l1.transactionmanager.strings.compress.logging.enabled = false, l1.transactionmanager.strings.compress.minSize = 512, l1.transactionmanager.timeoutForAckOnExit = 300, l2.beanshell.enabled = false, l2.beanshell.port = 9929, l2.berkeleydb.je.checkpointer.bytesInterval = 100000000, l2.berkeleydb.je.cleaner.bytesInterval = 20000000, l2.berkeleydb.je.cleaner.detailMaxMemoryPercentage = 5, l2.berkeleydb.je.cleaner.lookAheadCacheSize = 32768, l2.berkeleydb.je.cleaner.minAge = 5, l2.berkeleydb.je.lock.nLockTables = 7, l2.berkeleydb.je.lock.timeout = 180000000, l2.berkeleydb.je.maxMemoryPercent = 25, l2.cachemanager.criticalObjectThreshold = -1, l2.cachemanager.criticalThreshold = 90, l2.cachemanager.enabled = true, l2.cachemanager.leastCount = 2, l2.cachemanager.logging.enabled = false, l2.cachemanager.monitorOldGenOnly = true, l2.cachemanager.percentageToEvict = 10, l2.cachemanager.sleepInterval = 3000, l2.cachemanager.threshold = 70, l2.data.backup.throttle.timeInMillis = 0, l2.healthcheck.l1.ping.enabled = true, l2.healthcheck.l1.ping.idletime = 5000, l2.healthcheck.l1.ping.interval = 1000, l2.healthcheck.l1.ping.probes = 3, l2.healthcheck.l1.socketConnect = true, l2.healthcheck.l1.socketConnectCount = 10, l2.healthcheck.l1.socketConnectTimeout = 5, l2.healthcheck.l2.ping.enabled = true, l2.healthcheck.l2.ping.idletime = 5000, l2.healthcheck.l2.ping.interval = 1000, l2.healthcheck.l2.ping.probes = 3, l2.healthcheck.l2.socketConnect = true, l2.healthcheck.l2.socketConnectCount = 10, l2.healthcheck.l2.socketConnectTimeout = 5, l2.l1reconnect.enabled = false, l2.l1reconnect.maxDelayedAcks = 16, l2.l1reconnect.sendWindow = 32, l2.l1reconnect.sendqueue.cap = 5000, l2.l1reconnect.timeout.millis = 5000, l2.lfu.agingFactor = 1, l2.lfu.debug.enabled = false, l2.lfu.recentlyAccessedIgnorePercentage = 20, l2.lockmanager.greedy.lease.enabled = true, l2.lockmanager.greedy.lease.leaseTimeInMillis = 50, l2.lockmanager.greedy.locks.enabled = true, l2.nha.autoRestart = true, l2.nha.dirtydb.autoDelete = true, l2.nha.dirtydb.rolling = 0, l2.nha.send.timeout.millis = 16000, l2.nha.tcgroupcomm.discovery.interval = 1000, l2.nha.tcgroupcomm.handshake.timeout = 5000, l2.nha.tcgroupcomm.reconnect.enabled = false, l2.nha.tcgroupcomm.reconnect.maxDelayedAcks = 16, l2.nha.tcgroupcomm.reconnect.sendWindow = 32, l2.nha.tcgroupcomm.reconnect.sendqueue.cap = 5000, l2.nha.tcgroupcomm.reconnect.timeout = 5000, l2.objectmanager.cachePolicy = lfu, l2.objectmanager.deleteBatchSize = 5000, l2.objectmanager.dgc.faulting.optimization = true, l2.objectmanager.dgc.throttle.requestsPerThrottle = 1000, l2.objectmanager.dgc.throttle.timeInMillis = 0, l2.objectmanager.dgc.young.enabled = false, l2.objectmanager.dgc.young.frequencyInMillis = 180000, l2.objectmanager.fault.logging.enabled = false, l2.objectmanager.flush.logging.enabled = false, l2.objectmanager.loadObjectID.checkpoint.maxlimit = -1, l2.objectmanager.loadObjectID.checkpoint.maxsleep = 10000, l2.objectmanager.loadObjectID.fastLoad = true, l2.objectmanager.loadObjectID.longsPerDiskEntry = 8, l2.objectmanager.loadObjectID.mapsdatabase.longsPerDiskEntry = 1, l2.objectmanager.maxObjectsInTxnObjGrouping = 5000, l2.objectmanager.maxObjectsToCommit = 5000, l2.objectmanager.maxTxnsInTxnObjectGrouping = 500, l2.objectmanager.objectrequest.logging.enabled = false, l2.objectmanager.objectrequest.split.size = 5, l2.objectmanager.passive.sync.batch.size = 500, l2.objectmanager.passive.sync.throttle.timeInMillis = 0, l2.objectmanager.persistor.logging.enabled = false, l2.objectmanager.persistor.measure.performance = false, l2.objectmanager.request.logging.enabled = false, l2.remotejmx.idletime = 5, l2.remotejmx.maxthreads = 50, l2.seda.commitstage.threads = 4, l2.seda.faultstage.threads = 4, l2.seda.flushstage.threads = 4, l2.seda.gcdeletestage.threads = 1, l2.seda.managedobjectrequeststage.threads = 4, l2.seda.managedobjectresponsestage.threads = 4, l2.seda.stage.sink.capacity = -1, l2.serverarray.2pc.enabled = true, l2.startuplock.retries.enabled = false, l2.transactionmanager.logging.enabled = false, l2.transactionmanager.logging.printBroadcastStats = false, l2.transactionmanager.logging.printCommits = false, l2.transactionmanager.logging.printStats = true, l2.transactionmanager.logging.verbose = false, l2.transactionmanager.passive.throttle.enabled = true, l2.transactionmanager.passive.throttle.maxSleepSeconds = 5, l2.transactionmanager.passive.throttle.threshold = 20000, lock.statistics.enabled = false, logging.longgc.threshold = 8000, logging.maxBackups = 20, logging.maxLogFileSize = 512, memory.monitor.forcebasic = false, net.core.keepalive = false, net.core.tcpnodelay = true, session.debug.hops = false, session.debug.hops.interval = 100, session.debug.invalidate = false, session.debug.sessions = false, session.invalidator.bench.enabled = true, session.invalidator.sleep = 300, session.request.bench.enabled = false, session.request.tracking = false, session.request.tracking.dump = false, session.request.tracking.interval = 2500, session.request.tracking.threshold = 15000, session.vhosts.excluded = , stats.printer.intervalInMillis = 5000, tc.bytebuffer.common.pool.maxcount = 3000, tc.bytebuffer.pooling.enabled = true, tc.bytebuffer.threadlocal.pool.maxcount = 2000, tc.config.getFromSource.timeout = 30000, tc.management.mbeans.enabled = true, tc.management.test.mbeans.enabled = false, tc.stage.monitor.delay = 5000, tc.stage.monitor.enabled = false, tc.transport.handshake.timeout = 10000, tcm.monitor.delay = 5, tcm.monitor.enabled = false }
2010-06-28 22:11:33,094 [main] INFO com.terracottatech.console - Log file: 'F:\我的文件夹\Workspace\Bank\terracotta\client-logs\terracotta-client.log'.
2010-06-28 22:11:33,095 [main] INFO com.tc.logging.TCLogging - All Java System Properties for this Terracotta instance:
========================================================================
awt.toolkit                  : sun.awt.windows.WToolkit
file.encoding                : GBK
file.encoding.pkg            : sun.io
file.separator               : \
java.awt.graphicsenv         : sun.awt.Win32GraphicsEnvironment
java.awt.printerjob          : sun.awt.windows.WPrinterJob
java.class.path              : F:\我的文件夹\Workspace\Bank\bin
java.class.version           : 50.0
java.endorsed.dirs           : D:\Program Files\Java\jre6\lib\endorsed
java.ext.dirs                : D:\Program Files\Java\jre6\lib\ext;C:\Windows\Sun\Java\lib\ext
java.home                    : D:\Program Files\Java\jre6
java.io.tmpdir               : D:\Temp\
java.library.path            : D:\Program Files\Java\jre6\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Program Files/Java/jre6/bin/client;D:/Program Files/Java/jre6/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;D:\Program Files\MATLAB\R2009a\bin;D:\Program Files\MATLAB\R2009a\bin\win32;D:\Program Files\MinGW\bin;D:\Program Files\Java\jdk1.6.0_18\bin;C:\Program Files\Common Files\Teleca Shared;D:\MinGW;D:\Program Files\Java\jdk1.6.0_18\bin;D:\Program Files\MinGW\bin;
java.runtime.name            : Java(TM) SE Runtime Environment
java.runtime.version         : 1.6.0_18-b07
java.specification.name      : Java Platform API Specification
java.specification.vendor    : Sun Microsystems Inc.
java.specification.version   : 1.6
java.vendor                  : Sun Microsystems Inc.
java.vendor.url              : http://java.sun.com/
java.vendor.url.bug          : http://java.sun.com/cgi-bin/bugreport.cgi
java.version                 : 1.6.0_18
java.vm.info                 : mixed mode
java.vm.name                 : Java HotSpot(TM) Client VM
java.vm.specification.name   : Java Virtual Machine Specification
java.vm.specification.vendor : Sun Microsystems Inc.
java.vm.specification.version: 1.0
java.vm.vendor               : Sun Microsystems Inc.
java.vm.version              : 16.0-b13
line.separator               : 

os.arch                      : x86
os.name                      : Windows 7
os.version                   : 6.1
path.separator               : ;
project.name                 : Bank
sun.arch.data.model          : 32
sun.boot.class.path          : F:\我的文件夹\Workspace\Bank\dso-boot-hotspot_win32_160_18.jar;D:\Program Files\Java\jre6\lib\resources.jar;D:\Program Files\Java\jre6\lib\rt.jar;D:\Program Files\Java\jre6\lib\sunrsasign.jar;D:\Program Files\Java\jre6\lib\jsse.jar;D:\Program Files\Java\jre6\lib\jce.jar;D:\Program Files\Java\jre6\lib\charsets.jar;D:\Program Files\Java\jre6\classes
sun.boot.library.path        : D:\Program Files\Java\jre6\bin
sun.cpu.endian               : little
sun.cpu.isalist              : pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86
sun.desktop                  : windows
sun.io.unicode.encoding      : UnicodeLittle
sun.java.launcher            : SUN_STANDARD
sun.jnu.encoding             : GBK
sun.management.compiler      : HotSpot Client Compiler
sun.os.patch.level           : 
tc.config                    : F:\我的文件夹\Workspace\Bank\tc-config.xml
tc.install-root              : D:\install-free programs\eclipse\plugins\org.terracotta.dso_3.2.1.r15117_v20100514
user.country                 : CN
user.dir                     : F:\我的文件夹\Workspace\Bank
user.home                    : C:\Users\xiaoyaoth
user.language                : zh
user.name                    : xiaoyaoth
user.timezone                : Asia/Shanghai
user.variant                 : 
========================================================================
2010-06-28 22:11:33,885 [main] INFO com.terracottatech.dso - Trying to get Cluster topology from http://192.168.137.1:9510/groupinfo
2010-06-28 22:11:34,628 [main] INFO com.terracottatech.dso - Trying to get L1 Reconnect Properties from http://192.168.137.1:9510/l1reconnectproperties
2010-06-28 22:11:35,192 [main] INFO com.tc.net.core.TCComm - Comm Worker Threads NOT requested
2010-06-28 22:11:35,220 [main] INFO com.tc.net.protocol.transport.ConnectionHealthCheckerImpl: DSO Client - HealthChecker Started
2010-06-28 22:11:35,287 [main] INFO com.tc.net.protocol.tcm.CommunicationsManager - HealthCheck CallbackPort Listener started at /0.0.0.0:53758
2010-06-28 22:11:35,380 [Statistics Logger] INFO com.terracottatech.dso - memory free : 254001800
2010-06-28 22:11:35,381 [Statistics Logger] INFO com.terracottatech.dso - memory used : 5520760
2010-06-28 22:11:35,381 [Statistics Logger] INFO com.terracottatech.dso - memory max : 259522560
2010-06-28 22:11:35,382 [main] INFO com.terracottatech.dso - Statistics buffer opened
2010-06-28 22:11:35,426 [main] INFO com.tc.statistics.StatisticRetrievalAction - "message monitor" statistic is not enabled. Please enable the property "tcm.monitor.delay" to collect this statistics.
2010-06-28 22:11:35,465 [main] INFO com.tc.runtime.TCMemoryManagerImpl - GarbageCollector: Copy
2010-06-28 22:11:35,465 [main] INFO com.tc.runtime.TCMemoryManagerImpl - GarbageCollector: MarkSweepCompact
2010-06-28 22:11:35,561 [L1Management JMX registration] INFO com.tc.management.L1Management - Terracotta JMX connector available at[service:jmx:terracotta://localhost]
2010-06-28 22:11:35,628 [main] INFO com.tc.net.protocol.transport.ClientMessageTransport - ConnectionID(-1.ffffffffffffffffffffffffffffffff): Attaching new connection: com.tc.net.core.TCConnectionJDK14@8398024: connected: true, closed: false local=192.168.137.1:53759 remote=192.168.137.1:9510 connect=[Mon Jun 28 22:11:35 CST 2010] idle=8ms [0 read, 0 write]
2010-06-28 22:11:35,675 [main] INFO com.tc.net.protocol.transport.ConnectionHealthCheckerImpl. DSO Client - Health monitoring agent started for xiaoyaoth-PC.mshome.net:9510
2010-06-28 22:11:35,680 [WorkerThread(client_coordination_stage, 0)] INFO com.tc.object.handshakemanager.ClientHandshakeManagerImpl - ClientID[0]: Connected: Unpausing from State[ PAUSED ] RemoteNode : GroupID[0]. Disconnect count : 1
2010-06-28 22:11:35,681 [L1_L2:TCComm Main Selector Thread_R (listen 0.0.0.0:53758)] INFO com.tc.net.protocol.transport.ConnectionHealthCheckerImpl. DSO Client - HealthCheckCallbackPort verification PASSED for xiaoyaoth-PC.mshome.net:9510(callbackport: 9510)
2010-06-28 22:11:35,713 [WorkerThread(client_coordination_stage, 0)] INFO com.tc.object.handshakemanager.ClientHandshakeManagerImpl - ClientID[0]: Received Handshake ack for this node :GroupID[0]
2010-06-28 22:11:35,715 [main] INFO com.terracottatech.console - Connection successfully established to server at 192.168.137.1:9510
2010-06-28 22:11:35,715 [main] INFO com.terracottatech.dso - Connection successfully established to server at 192.168.137.1:9510
2010-06-28 22:11:35,732 [WorkerThread(client_coordination_stage, 0)] INFO com.tc.management.remote.protocol.terracotta.TunnelingEventHandler - Client JMX server ready; sending notification to L2 server
2010-06-28 22:11:44,494 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:44,714 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:44,938 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,078 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,222 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,371 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,511 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,639 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,768 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:45,914 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,055 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,188 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,320 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,449 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,579 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,709 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:46,864 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,000 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,127 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,255 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,394 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,528 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,654 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,780 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:47,925 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,057 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,194 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,334 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,462 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,588 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,714 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,864 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:48,989 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,135 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,264 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,391 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,515 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,632 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,768 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:49,915 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,047 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,171 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,296 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,425 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,630 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,743 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:50,874 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,012 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,138 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,274 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,411 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,561 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,766 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:51,965 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,128 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,302 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,470 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,592 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,720 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,845 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:52,978 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,105 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,235 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,363 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,490 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,619 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,750 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:53,883 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,027 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,162 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,288 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,410 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,533 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,646 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,768 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:54,982 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,113 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,245 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,388 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,515 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,642 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,774 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:55,905 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,037 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,174 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,330 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,483 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,611 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,731 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,851 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:56,977 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,105 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,246 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,416 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,621 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,741 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,864 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:57,998 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,138 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,261 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,388 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,524 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,644 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,783 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:58,916 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:59,067 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:59,235 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:59,398 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:59,560 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:59,714 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:11:59,861 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,026 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,190 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,325 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,454 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,585 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,736 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:00,890 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,030 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,162 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,291 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,417 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,587 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,737 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:01,883 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:02,019 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:02,163 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:02,288 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:02,462 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:02,706 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:02,907 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:03,216 [Thread-16] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-16 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:03,374 [Thread-20] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-20 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:03,502 [Thread-20] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-20 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:03,628 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:03,748 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:03,873 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,101 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,223 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,349 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,472 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,597 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,721 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,851 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:04,979 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,107 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,316 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,442 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,557 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,671 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,786 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:05,912 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,032 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,166 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,286 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,421 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,539 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,658 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,792 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:06,913 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,041 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,181 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,302 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,428 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,555 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,689 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,810 [Thread-15] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-15 in VM(0)
Shared Object Type: Bank

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Bank.run(Bank.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:07,930 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,052 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,196 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,316 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,436 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,553 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,672 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,827 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:08,952 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,066 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,211 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,331 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,451 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,571 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,691 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,814 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:09,941 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,068 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,201 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,323 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,444 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,571 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,689 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,818 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:10,936 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,063 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,216 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,348 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,486 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,619 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,749 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:11,872 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,009 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,170 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,300 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,469 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,589 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,745 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:12,861 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:13,058 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:13,262 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:13,402 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:13,803 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:14,004 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:14,212 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:14,366 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:14,521 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
2010-06-28 22:12:14,704 [Thread-19] ERROR com.tc.object.TCObjectImpl - Exception thrown
com.tc.object.tx.UnlockedSharedObjectException: 
*********************************************************************
Attempt to access a shared object outside the scope of a shared lock.
All access to shared objects must be within the scope of one or more
shared locks defined in your Terracotta configuration.

Caused by Thread: Thread-19 in VM(0)
Shared Object Type: Customer

The cause may be one or more of the following:
 * Terracotta locking was not configured for the shared code.
 * The code itself does not have synchronization that Terracotta
   can use as a boundary.
 * The class doing the locking must be included for instrumentation.
 * The object was first locked, then shared.

For more information on how to solve this issue, see:
http://www.terracotta.org/usoe
*********************************************************************

	at com.tc.object.tx.ClientTransactionManagerImpl.getTransaction(ClientTransactionManagerImpl.java:202)
	at com.tc.object.tx.ClientTransactionManagerImpl.fieldChanged(ClientTransactionManagerImpl.java:405)
	at com.tc.object.TCObjectImpl.objectFieldChanged(TCObjectImpl.java:331)
	at com.tc.object.TCObjectImpl.intFieldChanged(TCObjectImpl.java:373)
	at simulation.modeling.DefaultBelief.__tc_settick(DefaultBelief.java)
	at simulation.modeling.DefaultBelief.addTick(DefaultBelief.java:85)
	at Customer.run(Customer.java:42)
	at java.lang.Thread.run(Unknown Source)
